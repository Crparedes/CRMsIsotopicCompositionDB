#              arrow = arrow(ends = 'both', length = unit(x = 7, units = 'pt')))
)
(RechT <- ggplot(data = data.frame(R = R.cor, Tcal = t.cal), aes(x = R, y = t.cal)) +
theme_bw() +
labs(y = expression(t['cal']), x = 'Coeficiente de correlación R') +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black")) +
geom_function(fun = function (x) return((x * sqrt(m - 2)) / (sqrt(1.000 - x ^ 2))),
color = '#34B1C9', size = 1) +
scale_y_continuous(limits = c(0, 14), n.breaks = 11, expand = c(0, 0), oob=rescale_none) +
scale_x_reverse(limits = c(1, 0.3), labels = function(x) sprintf("%.2f", x),
breaks = seq(1, 0.3, - 0.05), expand = c(0, 0)) +
geom_hline(aes(yintercept = qt(0.9999, 9, FALSE)), size = 1, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.999, 9, FALSE)), size = 1, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.99, 9, FALSE)), size = 1, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.95, 9, FALSE)), size = 1, linetype = "dashed", color = '#164952') +
annotate("text", x = 0.5, y = qt(0.9999, 9, FALSE) + 0.5, label = "Nivel de confianza 99.99 %", size = 3) +
annotate("text", x = 0.4, y = qt(0.999, 9, FALSE) + 0.5, label = "99.9 %", size = 3) +
annotate("text", x = 0.4, y = qt(0.99, 9, FALSE) + 0.5, label = "99 %", size = 3) +
annotate("text", x = 0.4, y = qt(0.95, 9, FALSE) + 0.5, label = "95 %", size = 3)
# geom_segment(aes(x = 1.627, y = -1, xend = 1.627, yend = 0.285), size = 0.3, linetype = "dotted") +
# geom_segment(aes(x = 1.48, y = -1, xend = 1.48, yend = 0.285), size = 0.3, linetype = "dotted")  +
# geom_segment(aes(x = 1.55, y = -1, xend = 1.55, yend = 0.285), size = 0.3, linetype = "dashed") +
# geom_segment(aes(x = 1.48, y = 0, xend = 1.627, yend = 0), size = 0.3,
#              arrow = arrow(ends = 'both', length = unit(x = 7, units = 'pt')))
)
(RechT <- ggplot(data = data.frame(R = R.cor, Tcal = t.cal), aes(x = R, y = t.cal)) +
theme_bw() +
labs(y = expression(t['cal']), x = 'Coeficiente de correlación R') +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black")) +
geom_function(fun = function (x) return((x * sqrt(m - 2)) / (sqrt(1.000 - x ^ 2))),
color = '#34B1C9', size = 1) +
scale_y_continuous(limits = c(0, 14), n.breaks = 11, expand = c(0, 0), oob=rescale_none) +
scale_x_reverse(limits = c(1, 0.3), labels = function(x) sprintf("%.2f", x),
breaks = seq(1, 0.3, - 0.05), expand = c(0, 0)) +
geom_hline(aes(yintercept = qt(0.9999, 9, FALSE)), size = 1, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.999, 9, FALSE)), size = 1, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.99, 9, FALSE)), size = 1, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.95, 9, FALSE)), size = 1, linetype = "dashed", color = '#164952') +
annotate("text", x = 0.5, y = qt(0.9999, 9, FALSE) + 0.5, label = "Nivel de confianza 99.99 %", size = 3) +
annotate("text", x = 0.4, y = qt(0.999, 9, FALSE) + 0.5, label = "99.9 %", size = 3) +
annotate("text", x = 0.39, y = qt(0.99, 9, FALSE) + 0.5, label = "99 %", size = 3) +
annotate("text", x = 0.39, y = qt(0.95, 9, FALSE) + 0.5, label = "95 %", size = 3)
# geom_segment(aes(x = 1.627, y = -1, xend = 1.627, yend = 0.285), size = 0.3, linetype = "dotted") +
# geom_segment(aes(x = 1.48, y = -1, xend = 1.48, yend = 0.285), size = 0.3, linetype = "dotted")  +
# geom_segment(aes(x = 1.55, y = -1, xend = 1.55, yend = 0.285), size = 0.3, linetype = "dashed") +
# geom_segment(aes(x = 1.48, y = 0, xend = 1.627, yend = 0), size = 0.3,
#              arrow = arrow(ends = 'both', length = unit(x = 7, units = 'pt')))
)
(RechT <- ggplot(data = data.frame(R = R.cor, Tcal = t.cal), aes(x = R, y = t.cal)) +
theme_bw() +
labs(y = expression(t['cal']), x = 'Coeficiente de correlación R') +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black")) +
geom_function(fun = function (x) return((x * sqrt(m - 2)) / (sqrt(1.000 - x ^ 2))),
color = '#34B1C9', size = 1) +
scale_y_continuous(limits = c(0, 14), n.breaks = 11, expand = c(0, 0), oob=rescale_none) +
scale_x_reverse(limits = c(1, 0.3), labels = function(x) sprintf("%.2f", x),
breaks = seq(1, 0.3, - 0.05), expand = c(0, 0)) +
geom_hline(aes(yintercept = qt(0.9999, 9, FALSE)), size = 1, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.999, 9, FALSE)), size = 1, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.99, 9, FALSE)), size = 1, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.95, 9, FALSE)), size = 1, linetype = "dashed", color = '#164952') +
annotate("text", x = 0.5, y = qt(0.9999, 9, FALSE) + 0.35, label = "Nivel de confianza 99.99 %", size = 3) +
annotate("text", x = 0.4, y = qt(0.999, 9, FALSE) + 0.35, label = "99.9 %", size = 3) +
annotate("text", x = 0.39, y = qt(0.99, 9, FALSE) + 0.35, label = "99 %", size = 3) +
annotate("text", x = 0.39, y = qt(0.95, 9, FALSE) + 0.35, label = "95 %", size = 3)
# geom_segment(aes(x = 1.627, y = -1, xend = 1.627, yend = 0.285), size = 0.3, linetype = "dotted") +
# geom_segment(aes(x = 1.48, y = -1, xend = 1.48, yend = 0.285), size = 0.3, linetype = "dotted")  +
# geom_segment(aes(x = 1.55, y = -1, xend = 1.55, yend = 0.285), size = 0.3, linetype = "dashed") +
# geom_segment(aes(x = 1.48, y = 0, xend = 1.627, yend = 0), size = 0.3,
#              arrow = arrow(ends = 'both', length = unit(x = 7, units = 'pt')))
)
source("~/0-INM.V2/Graficos y Disenos/GQSP Validación/graficasGuiaValidacion-master/graficasGuiaValidacion-master/Figura3-9.R")
(RechT <- ggplot(data = data.frame(R = R.cor, Tcal = t.cal), aes(x = R, y = t.cal)) +
theme_bw() +
labs(y = expression(t['cal']), x = 'Coeficiente de correlación R') +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black")) +
geom_function(fun = function (x) return((x * sqrt(m - 2)) / (sqrt(1.000 - x ^ 2))),
color = '#34B1C9', size = 1) +
scale_y_continuous(limits = c(0, 14), n.breaks = 11, expand = c(0, 0), oob=rescale_none) +
scale_x_reverse(limits = c(1, 0.3), labels = function(x) sprintf("%.2f", x),
breaks = seq(1, 0.3, - 0.05), expand = c(0, 0)) +
geom_hline(aes(yintercept = qt(0.9999, 9, FALSE)), size = 1, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.999, 9, FALSE)), size = 1, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.99, 9, FALSE)), size = 1, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.95, 9, FALSE)), size = 1, linetype = "dashed", color = '#164952') +
annotate("text", x = 0.5, y = qt(0.9999, 9, FALSE) + 0.35, label = "Nivel de confianza 99.99 %", size = 3) +
annotate("text", x = 0.4, y = qt(0.999, 9, FALSE) + 0.35, label = "99.9 %", size = 3) +
annotate("text", x = 0.39, y = qt(0.99, 9, FALSE) + 0.35, label = "99 %", size = 3) +
annotate("text", x = 0.39, y = qt(0.95, 9, FALSE) + 0.35, label = "95 %", size = 3)
# geom_segment(aes(x = 1.627, y = -1, xend = 1.627, yend = 0.285), size = 0.3, linetype = "dotted") +
# geom_segment(aes(x = 1.48, y = -1, xend = 1.48, yend = 0.285), size = 0.3, linetype = "dotted")  +
# geom_segment(aes(x = 1.55, y = -1, xend = 1.55, yend = 0.285), size = 0.3, linetype = "dashed") +
# geom_segment(aes(x = 1.48, y = 0, xend = 1.627, yend = 0), size = 0.3,
#              arrow = arrow(ends = 'both', length = unit(x = 7, units = 'pt')))
)
savepdf(RechT, name = 'VariacionValorTcontraR', h = 4, w = 7)
(RechT <- ggplot(data = data.frame(R = R.cor, Tcal = t.cal), aes(x = R, y = t.cal)) +
theme_bw() +
labs(y = expression(t['cal']), x = 'Coeficiente de correlación R') +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black")) +
geom_function(fun = function (x) return((x * sqrt(m - 2)) / (sqrt(1.000 - x ^ 2))),
color = '#34B1C9', size = 1) +
scale_y_continuous(limits = c(0, 14), n.breaks = 11, expand = c(0, 0), oob=rescale_none) +
scale_x_reverse(limits = c(1, 0.3), labels = function(x) sprintf("%.2f", x),
breaks = seq(1, 0.3, - 0.05), expand = c(0, 0)) +
geom_hline(aes(yintercept = qt(0.9999, 9, FALSE)), size = 0.8, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.999, 9, FALSE)), size = 0.8, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.99, 9, FALSE)), size = 0.8, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.95, 9, FALSE)), size = 0.8, linetype = "dashed", color = '#164952') +
annotate("text", x = 0.5, y = qt(0.9999, 9, FALSE) + 0.35, label = "Nivel de confianza 99.99 %", size = 3) +
annotate("text", x = 0.4, y = qt(0.999, 9, FALSE) + 0.35, label = "99.9 %", size = 3) +
annotate("text", x = 0.39, y = qt(0.99, 9, FALSE) + 0.35, label = "99 %", size = 3) +
annotate("text", x = 0.39, y = qt(0.95, 9, FALSE) + 0.35, label = "95 %", size = 3)
# geom_segment(aes(x = 1.627, y = -1, xend = 1.627, yend = 0.285), size = 0.3, linetype = "dotted") +
# geom_segment(aes(x = 1.48, y = -1, xend = 1.48, yend = 0.285), size = 0.3, linetype = "dotted")  +
# geom_segment(aes(x = 1.55, y = -1, xend = 1.55, yend = 0.285), size = 0.3, linetype = "dashed") +
# geom_segment(aes(x = 1.48, y = 0, xend = 1.627, yend = 0), size = 0.3,
#              arrow = arrow(ends = 'both', length = unit(x = 7, units = 'pt')))
)
savepdf(RechT, name = 'VariacionValorTcontraR', h = 4, w = 6)
(RechT <- ggplot(data = data.frame(R = R.cor, Tcal = t.cal), aes(x = R, y = t.cal)) +
theme_bw() +
labs(y = expression(t['cal']), x = 'Coeficiente de correlación R') +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black")) +
geom_function(fun = function (x) return((x * sqrt(m - 2)) / (sqrt(1.000 - x ^ 2))),
color = '#34B1C9', size = 1) +
scale_y_continuous(limits = c(0, 14), n.breaks = 11, expand = c(0, 0), oob=rescale_none) +
scale_x_reverse(limits = c(1, 0.3), labels = function(x) sprintf("%.2f", x),
breaks = seq(1, 0.3, - 0.05), expand = c(0, 0)) +
geom_hline(aes(yintercept = qt(0.9999, 9, FALSE)), size = 0.7, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.999, 9, FALSE)), size = 0.7, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.99, 9, FALSE)), size = 0.7, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.95, 9, FALSE)), size = 0.7, linetype = "dashed", color = '#164952') +
annotate("text", x = 0.45, y = qt(0.9999, 9, FALSE) + 0.35, label = "Nivel de confianza 99.99 %", size = 3) +
annotate("text", x = 0.395, y = qt(0.999, 9, FALSE) + 0.35, label = "99.9 %", size = 3) +
annotate("text", x = 0.39, y = qt(0.99, 9, FALSE) + 0.35, label = "99 %", size = 3) +
annotate("text", x = 0.39, y = qt(0.95, 9, FALSE) + 0.35, label = "95 %", size = 3)
# geom_segment(aes(x = 1.627, y = -1, xend = 1.627, yend = 0.285), size = 0.3, linetype = "dotted") +
# geom_segment(aes(x = 1.48, y = -1, xend = 1.48, yend = 0.285), size = 0.3, linetype = "dotted")  +
# geom_segment(aes(x = 1.55, y = -1, xend = 1.55, yend = 0.285), size = 0.3, linetype = "dashed") +
# geom_segment(aes(x = 1.48, y = 0, xend = 1.627, yend = 0), size = 0.3,
#              arrow = arrow(ends = 'both', length = unit(x = 7, units = 'pt')))
)
savepdf(RechT, name = 'VariacionValorTcontraR', h = 4, w = 6)
(RechT <- ggplot(data = data.frame(R = R.cor, Tcal = t.cal), aes(x = R, y = t.cal)) +
theme_bw() +
labs(y = expression(t['cal']), x = 'Coeficiente de correlación R') +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black")) +
geom_function(fun = function (x) return((x * sqrt(m - 2)) / (sqrt(1.000 - x ^ 2))),
color = '#34B1C9', size = 1) +
scale_y_continuous(limits = c(0, 14), n.breaks = 11, expand = c(0, 0), oob=rescale_none) +
scale_x_reverse(limits = c(1, 0.3), labels = function(x) sprintf("%.2f", x),
breaks = seq(1, 0.3, - 0.05), expand = c(0, 0)) +
geom_hline(aes(yintercept = qt(0.9999, 9, FALSE)), size = 0.7, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.999, 9, FALSE)), size = 0.7, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.99, 9, FALSE)), size = 0.7, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.95, 9, FALSE)), size = 0.7, linetype = "dashed", color = '#164952') +
annotate("text", x = 0.47, y = qt(0.9999, 9, FALSE) + 0.35, label = "Nivel de confianza 99.99 %", size = 3) +
annotate("text", x = 0.395, y = qt(0.999, 9, FALSE) + 0.35, label = "99.9 %", size = 3) +
annotate("text", x = 0.39, y = qt(0.99, 9, FALSE) + 0.35, label = "99 %", size = 3) +
annotate("text", x = 0.39, y = qt(0.95, 9, FALSE) + 0.35, label = "95 %", size = 3)
# geom_segment(aes(x = 1.627, y = -1, xend = 1.627, yend = 0.285), size = 0.3, linetype = "dotted") +
# geom_segment(aes(x = 1.48, y = -1, xend = 1.48, yend = 0.285), size = 0.3, linetype = "dotted")  +
# geom_segment(aes(x = 1.55, y = -1, xend = 1.55, yend = 0.285), size = 0.3, linetype = "dashed") +
# geom_segment(aes(x = 1.48, y = 0, xend = 1.627, yend = 0), size = 0.3,
#              arrow = arrow(ends = 'both', length = unit(x = 7, units = 'pt')))
)
savepdf(RechT, name = 'VariacionValorTcontraR', h = 4, w = 6)
(RechT <- ggplot(data = data.frame(R = R.cor, Tcal = t.cal), aes(x = R, y = t.cal)) +
theme_bw() +
labs(y = expression(t['cal']), x = 'Coeficiente de correlación R') +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black")) +
geom_function(fun = function (x) return((x * sqrt(m - 2)) / (sqrt(1.000 - x ^ 2))),
color = '#34B1C9', size = 1) +
scale_y_continuous(limits = c(0, 14), n.breaks = 11, expand = c(0, 0), oob=rescale_none) +
scale_x_reverse(limits = c(1, 0.3), labels = function(x) sprintf("%.2f", x),
breaks = seq(1, 0.3, - 0.05), expand = c(0, 0)) +
geom_hline(aes(yintercept = qt(0.9999, 9, FALSE)), size = 0.7, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.999, 9, FALSE)), size = 0.7, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.99, 9, FALSE)), size = 0.7, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.95, 9, FALSE)), size = 0.7, linetype = "dashed", color = '#164952') +
annotate("text", x = 0.67, y = qt(0.9999, 9, FALSE) + 0.35, label = "Nivel de confianza 99.99 %", size = 3) +
annotate("text", x = 0.595, y = qt(0.999, 9, FALSE) + 0.35, label = "99.9 %", size = 3) +
annotate("text", x = 0.59, y = qt(0.99, 9, FALSE) + 0.35, label = "99 %", size = 3) +
annotate("text", x = 0.59, y = qt(0.95, 9, FALSE) + 0.35, label = "95 %", size = 3)
# geom_segment(aes(x = 1.627, y = -1, xend = 1.627, yend = 0.285), size = 0.3, linetype = "dotted") +
# geom_segment(aes(x = 1.48, y = -1, xend = 1.48, yend = 0.285), size = 0.3, linetype = "dotted")  +
# geom_segment(aes(x = 1.55, y = -1, xend = 1.55, yend = 0.285), size = 0.3, linetype = "dashed") +
# geom_segment(aes(x = 1.48, y = 0, xend = 1.627, yend = 0), size = 0.3,
#              arrow = arrow(ends = 'both', length = unit(x = 7, units = 'pt')))
)
(RechT <- ggplot(data = data.frame(R = R.cor, Tcal = t.cal), aes(x = R, y = t.cal)) +
theme_bw() +
labs(y = expression(t['cal']), x = 'Coeficiente de correlación R') +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black")) +
geom_function(fun = function (x) return((x * sqrt(m - 2)) / (sqrt(1.000 - x ^ 2))),
color = '#34B1C9', size = 1) +
scale_y_continuous(limits = c(0, 14), n.breaks = 11, expand = c(0, 0), oob=rescale_none) +
scale_x_reverse(limits = c(1, 0.3), labels = function(x) sprintf("%.2f", x),
breaks = seq(1, 0.3, - 0.05), expand = c(0, 0)) +
geom_hline(aes(yintercept = qt(0.9999, 9, FALSE)), size = 0.7, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.999, 9, FALSE)), size = 0.7, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.99, 9, FALSE)), size = 0.7, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.95, 9, FALSE)), size = 0.7, linetype = "dashed", color = '#164952') +
annotate("text", x = 0.63, y = qt(0.9999, 9, FALSE) + 0.35, label = "Nivel de confianza 99.99 %", size = 3) +
annotate("text", x = 0.591, y = qt(0.999, 9, FALSE) + 0.35, label = "99.9 %", size = 3) +
annotate("text", x = 0.55, y = qt(0.99, 9, FALSE) + 0.35, label = "99 %", size = 3) +
annotate("text", x = 0.55, y = qt(0.95, 9, FALSE) + 0.35, label = "95 %", size = 3)
# geom_segment(aes(x = 1.627, y = -1, xend = 1.627, yend = 0.285), size = 0.3, linetype = "dotted") +
# geom_segment(aes(x = 1.48, y = -1, xend = 1.48, yend = 0.285), size = 0.3, linetype = "dotted")  +
# geom_segment(aes(x = 1.55, y = -1, xend = 1.55, yend = 0.285), size = 0.3, linetype = "dashed") +
# geom_segment(aes(x = 1.48, y = 0, xend = 1.627, yend = 0), size = 0.3,
#              arrow = arrow(ends = 'both', length = unit(x = 7, units = 'pt')))
)
savepdf(RechT, name = 'VariacionValorTcontraR', h = 4, w = 6)
(RechT <- ggplot(data = data.frame(R = R.cor, Tcal = t.cal), aes(x = R, y = t.cal)) +
theme_bw() +
labs(y = expression(t['cal']), x = 'Coeficiente de correlación R') +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black")) +
geom_function(fun = function (x) return((x * sqrt(m - 2)) / (sqrt(1.000 - x ^ 2))),
color = '#34B1C9', size = 1) +
scale_y_continuous(limits = c(0, 14), n.breaks = 11, expand = c(0, 0), oob=rescale_none) +
scale_x_reverse(limits = c(1, 0.3), labels = function(x) sprintf("%.2f", x),
breaks = seq(1, 0.3, - 0.05), expand = c(0, 0)) +
geom_hline(aes(yintercept = qt(0.9999, 9, FALSE)), size = 0.7, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.999, 9, FALSE)), size = 0.7, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.99, 9, FALSE)), size = 0.7, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.95, 9, FALSE)), size = 0.7, linetype = "dashed", color = '#164952') +
annotate("text", x = 0.62, y = qt(0.9999, 9, FALSE) + 0.35, label = "Nivel de confianza 99.99 %", size = 3) +
annotate("text", x = 0.53, y = qt(0.999, 9, FALSE) + 0.35, label = "99.9 %", size = 3) +
annotate("text", x = 0.52, y = qt(0.99, 9, FALSE) + 0.35, label = "99 %", size = 3) +
annotate("text", x = 0.52, y = qt(0.95, 9, FALSE) + 0.35, label = "95 %", size = 3)
# geom_segment(aes(x = 1.627, y = -1, xend = 1.627, yend = 0.285), size = 0.3, linetype = "dotted") +
# geom_segment(aes(x = 1.48, y = -1, xend = 1.48, yend = 0.285), size = 0.3, linetype = "dotted")  +
# geom_segment(aes(x = 1.55, y = -1, xend = 1.55, yend = 0.285), size = 0.3, linetype = "dashed") +
# geom_segment(aes(x = 1.48, y = 0, xend = 1.627, yend = 0), size = 0.3,
#              arrow = arrow(ends = 'both', length = unit(x = 7, units = 'pt')))
)
savepdf(RechT, name = 'VariacionValorTcontraR', h = 4, w = 6)
(RechT <- ggplot(data = data.frame(R = R.cor, Tcal = t.cal), aes(x = R, y = t.cal)) +
theme_bw() +
labs(y = expression(t['cal']), x = 'Coeficiente de correlación R') +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black")) +
geom_function(fun = function (x) return((x * sqrt(m - 2)) / (sqrt(1.000 - x ^ 2))),
color = '#34B1C9', size = 1) +
scale_y_continuous(limits = c(0, 14), n.breaks = 11, expand = c(0, 0), oob=rescale_none) +
scale_x_reverse(limits = c(1, 0.3), labels = function(x) sprintf("%.2f", x),
breaks = seq(1, 0.3, - 0.05), expand = c(0, 0)) +
geom_hline(aes(yintercept = qt(0.9999, 9, FALSE)), size = 0.5, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.999, 9, FALSE)), size = 0.5, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.99, 9, FALSE)), size = 0.5, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.95, 9, FALSE)), size = 0.5, linetype = "dashed", color = '#164952') +
annotate("text", x = 0.61, y = qt(0.9999, 9, FALSE) + 0.3, label = "Nivel de confianza 99.99 %", size = 3) +
annotate("text", x = 0.526, y = qt(0.999, 9, FALSE) + 0.3, label = "99.9 %", size = 3) +
annotate("text", x = 0.52, y = qt(0.99, 9, FALSE) + 0.3, label = "99 %", size = 3) +
annotate("text", x = 0.52, y = qt(0.95, 9, FALSE) + 0.3, label = "95 %", size = 3)
# geom_segment(aes(x = 1.627, y = -1, xend = 1.627, yend = 0.285), size = 0.3, linetype = "dotted") +
# geom_segment(aes(x = 1.48, y = -1, xend = 1.48, yend = 0.285), size = 0.3, linetype = "dotted")  +
# geom_segment(aes(x = 1.55, y = -1, xend = 1.55, yend = 0.285), size = 0.3, linetype = "dashed") +
# geom_segment(aes(x = 1.48, y = 0, xend = 1.627, yend = 0), size = 0.3,
#              arrow = arrow(ends = 'both', length = unit(x = 7, units = 'pt')))
)
savepdf(RechT, name = 'VariacionValorTcontraR', h = 4, w = 6)
savepdf(RechT, name = 'VariacionValorTcontraR', h = 4, w = 6)
(RechT <- ggplot(data = data.frame(R = R.cor, Tcal = t.cal), aes(x = R, y = t.cal)) +
theme_bw() +
labs(y = expression(t['cal']), x = 'Coeficiente de correlación R') +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black")) +
geom_function(fun = function (x) return((x * sqrt(m - 2)) / (sqrt(1.000 - x ^ 2))),
color = '#34B1C9', size = 1) +
scale_y_continuous(limits = c(0, 14), n.breaks = 11, expand = c(0, 0), oob=rescale_none) +
scale_x_reverse(limits = c(1, 0.3), labels = function(x) sprintf("%.2f", x),
breaks = seq(1, 0.3, - 0.05), expand = c(0, 0)) +
geom_hline(aes(yintercept = qt(0.9999, 9, FALSE)), size = 0.35, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.999, 9, FALSE)), size = 0.35, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.99, 9, FALSE)), size = 0.35, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.95, 9, FALSE)), size = 0.35, linetype = "dashed", color = '#164952') +
annotate("text", x = 0.60, y = qt(0.9999, 9, FALSE) + 0.3, label = "Niveles de confianza 99.99 %", size = 3) +
annotate("text", x = 0.526, y = qt(0.999, 9, FALSE) + 0.3, label = "99.9 %", size = 3) +
annotate("text", x = 0.52, y = qt(0.99, 9, FALSE) + 0.3, label = "99 %", size = 3) +
annotate("text", x = 0.52, y = qt(0.95, 9, FALSE) + 0.3, label = "95 %", size = 3)
# geom_segment(aes(x = 1.627, y = -1, xend = 1.627, yend = 0.285), size = 0.3, linetype = "dotted") +
# geom_segment(aes(x = 1.48, y = -1, xend = 1.48, yend = 0.285), size = 0.3, linetype = "dotted")  +
# geom_segment(aes(x = 1.55, y = -1, xend = 1.55, yend = 0.285), size = 0.3, linetype = "dashed") +
# geom_segment(aes(x = 1.48, y = 0, xend = 1.627, yend = 0), size = 0.3,
#              arrow = arrow(ends = 'both', length = unit(x = 7, units = 'pt')))
)
savepdf(RechT, name = 'VariacionValorTcontraR', h = 4, w = 6)
(RechT <- ggplot(data = data.frame(R = R.cor, Tcal = t.cal), aes(x = R, y = t.cal)) +
theme_bw() +
labs(y = expression(t['cal']), x = 'Coeficiente de correlación R') +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black")) +
geom_function(fun = function (x) return((x * sqrt(m - 2)) / (sqrt(1.000 - x ^ 2))),
color = '#34B1C9', size = 1) +
scale_y_continuous(limits = c(0, 14), n.breaks = 11, expand = c(0, 0), oob=rescale_none) +
scale_x_reverse(limits = c(1, 0.3), labels = function(x) sprintf("%.2f", x),
breaks = seq(1, 0.3, - 0.05), expand = c(0, 0)) +
geom_hline(aes(yintercept = qt(0.9999, 9, FALSE)), size = 0.35, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.999, 9, FALSE)), size = 0.35, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.99, 9, FALSE)), size = 0.35, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.95, 9, FALSE)), size = 0.35, linetype = "dashed", color = '#164952') +
annotate("text", x = 0.605, y = qt(0.9999, 9, FALSE) + 0.3, label = "Niveles de confianza 99.99 %", size = 3) +
annotate("text", x = 0.526, y = qt(0.999, 9, FALSE) + 0.3, label = "99.9 %", size = 3) +
annotate("text", x = 0.518, y = qt(0.99, 9, FALSE) + 0.3, label = "99 %", size = 3) +
annotate("text", x = 0.518, y = qt(0.95, 9, FALSE) + 0.3, label = "95 %", size = 3)
# geom_segment(aes(x = 1.627, y = -1, xend = 1.627, yend = 0.285), size = 0.3, linetype = "dotted") +
# geom_segment(aes(x = 1.48, y = -1, xend = 1.48, yend = 0.285), size = 0.3, linetype = "dotted")  +
# geom_segment(aes(x = 1.55, y = -1, xend = 1.55, yend = 0.285), size = 0.3, linetype = "dashed") +
# geom_segment(aes(x = 1.48, y = 0, xend = 1.627, yend = 0), size = 0.3,
#              arrow = arrow(ends = 'both', length = unit(x = 7, units = 'pt')))
)
savepdf(RechT, name = 'VariacionValorTcontraR', h = 4, w = 6)
savepdf(RechT, name = 'VariacionValorTcontraR', h = 4, w = 6)
(RechT <- ggplot(data = data.frame(R = R.cor, Tcal = t.cal), aes(x = R, y = t.cal)) +
theme_bw() +
labs(y = expression(t['cal']), x = 'Coeficiente de correlación R') +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black")) +
geom_function(fun = function (x) return((x * sqrt(m - 2)) / (sqrt(1.000 - x ^ 2))),
color = '#34B1C9', size = 1) +
scale_y_continuous(limits = c(0, 14), n.breaks = 11, expand = c(0, 0), oob=rescale_none) +
scale_x_reverse(limits = c(1, 0.3), labels = function(x) sprintf("%.2f", x),
breaks = seq(1, 0.3, - 0.05), expand = c(0, 0)) +
geom_hline(aes(yintercept = qt(0.9999, 9, FALSE)), size = 0.35, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.999, 9, FALSE)), size = 0.35, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.99, 9, FALSE)), size = 0.35, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.95, 9, FALSE)), size = 0.35, linetype = "dashed", color = '#164952') +
annotate("text", x = 0.65, y = 12,
label = expression(paste(H[0], ": No existe correlación entre X y Y")), size = 3.5) +
annotate("text", x = 0.605, y = qt(0.9999, 9, FALSE) + 0.3, label = "Niveles de confianza 99.99 %", size = 3) +
annotate("text", x = 0.526, y = qt(0.999, 9, FALSE) + 0.3, label = "99.9 %", size = 3) +
annotate("text", x = 0.518, y = qt(0.99, 9, FALSE) + 0.3, label = "99 %", size = 3) +
annotate("text", x = 0.518, y = qt(0.95, 9, FALSE) + 0.3, label = "95 %", size = 3)
# geom_segment(aes(x = 1.627, y = -1, xend = 1.627, yend = 0.285), size = 0.3, linetype = "dotted") +
# geom_segment(aes(x = 1.48, y = -1, xend = 1.48, yend = 0.285), size = 0.3, linetype = "dotted")  +
# geom_segment(aes(x = 1.55, y = -1, xend = 1.55, yend = 0.285), size = 0.3, linetype = "dashed") +
# geom_segment(aes(x = 1.48, y = 0, xend = 1.627, yend = 0), size = 0.3,
#              arrow = arrow(ends = 'both', length = unit(x = 7, units = 'pt')))
)
(RechT <- ggplot(data = data.frame(R = R.cor, Tcal = t.cal), aes(x = R, y = t.cal)) +
theme_bw() +
labs(y = expression(t['cal']), x = 'Coeficiente de correlación R') +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black")) +
geom_function(fun = function (x) return((x * sqrt(m - 2)) / (sqrt(1.000 - x ^ 2))),
color = '#34B1C9', size = 1) +
scale_y_continuous(limits = c(0, 14), n.breaks = 11, expand = c(0, 0), oob=rescale_none) +
scale_x_reverse(limits = c(1, 0.3), labels = function(x) sprintf("%.2f", x),
breaks = seq(1, 0.3, - 0.05), expand = c(0, 0)) +
geom_hline(aes(yintercept = qt(0.9999, 9, FALSE)), size = 0.35, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.999, 9, FALSE)), size = 0.35, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.99, 9, FALSE)), size = 0.35, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.95, 9, FALSE)), size = 0.35, linetype = "dashed", color = '#164952') +
annotate("text", x = 0.65, y = 13.5,
label = expression(paste(H[0], ": No existe correlación entre X y Y")), size = 3.5) +
annotate("text", x = 0.605, y = qt(0.9999, 9, FALSE) + 0.3, label = "Niveles de confianza 99.99 %", size = 3) +
annotate("text", x = 0.526, y = qt(0.999, 9, FALSE) + 0.3, label = "99.9 %", size = 3) +
annotate("text", x = 0.518, y = qt(0.99, 9, FALSE) + 0.3, label = "99 %", size = 3) +
annotate("text", x = 0.518, y = qt(0.95, 9, FALSE) + 0.3, label = "95 %", size = 3)
# geom_segment(aes(x = 1.627, y = -1, xend = 1.627, yend = 0.285), size = 0.3, linetype = "dotted") +
# geom_segment(aes(x = 1.48, y = -1, xend = 1.48, yend = 0.285), size = 0.3, linetype = "dotted")  +
# geom_segment(aes(x = 1.55, y = -1, xend = 1.55, yend = 0.285), size = 0.3, linetype = "dashed") +
# geom_segment(aes(x = 1.48, y = 0, xend = 1.627, yend = 0), size = 0.3,
#              arrow = arrow(ends = 'both', length = unit(x = 7, units = 'pt')))
)
savepdf(RechT, name = 'VariacionValorTcontraR', h = 4, w = 6)
(RechT <- ggplot(data = data.frame(R = R.cor, Tcal = t.cal), aes(x = R, y = t.cal)) +
theme_bw() +
labs(y = expression(t['cal']), x = 'Coeficiente de correlación R') +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black")) +
geom_function(fun = function (x) return((x * sqrt(m - 2)) / (sqrt(1.000 - x ^ 2))),
color = '#34B1C9', size = 1) +
scale_y_continuous(limits = c(0, 14), n.breaks = 11, expand = c(0, 0), oob=rescale_none) +
scale_x_reverse(limits = c(1, 0.3), labels = function(x) sprintf("%.2f", x),
breaks = seq(1, 0.3, - 0.05), expand = c(0, 0)) +
geom_hline(aes(yintercept = qt(0.9999, 9, FALSE)), size = 0.35, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.999, 9, FALSE)), size = 0.35, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.99, 9, FALSE)), size = 0.35, linetype = "dashed", color = '#164952') +
geom_hline(aes(yintercept = qt(0.95, 9, FALSE)), size = 0.35, linetype = "dashed", color = '#164952') +
annotate("text", x = 0.65, y = 13.5,
label = expression(paste(H[0], ": No existe correlación entre X y Y")), size = 3.5) +
annotate("text", x = 0.605, y = qt(0.9999, 9, FALSE) + 0.3, label = "Niveles de confianza 99.99 %", size = 3) +
annotate("text", x = 0.526, y = qt(0.999, 9, FALSE) + 0.3, label = "99.9 %", size = 3) +
annotate("text", x = 0.518, y = qt(0.99, 9, FALSE) + 0.3, label = "99 %", size = 3) +
annotate("text", x = 0.518, y = qt(0.95, 9, FALSE) + 0.3, label = "95 %", size = 3)
# geom_segment(aes(x = 1.627, y = -1, xend = 1.627, yend = 0.285), size = 0.3, linetype = "dotted") +
# geom_segment(aes(x = 1.48, y = -1, xend = 1.48, yend = 0.285), size = 0.3, linetype = "dotted")  +
# geom_segment(aes(x = 1.55, y = -1, xend = 1.55, yend = 0.285), size = 0.3, linetype = "dashed") +
# geom_segment(aes(x = 1.48, y = 0, xend = 1.627, yend = 0), size = 0.3,
#              arrow = arrow(ends = 'both', length = unit(x = 7, units = 'pt')))
)
savepdf(RechT, name = 'VariacionValorTcontraR', h = 4, w = 6)
runApp('~/CRMsIsotopicCompositionDB')
CIAAW_NatIsotAbunTable[which(CIAAW_NatIsotAbunTable$Element == tolower(SelectedElem())), ]
CIAAW_NatIsotAbunTable[which(CIAAW_NatIsotAbunTable$Element == tolower(SelectedElem())), c('Isotope')]
CIAAW_NatIsotAbunTable[which(CIAAW_NatIsotAbunTable$Element == tolower(SelectedElem())), c('Isotope', "Relative.abundance")]
CIAAW_NatIsotAbunTable[
which(CIAAW_NatIsotAbunTable$Element == tolower(SelectedElem())),
c("Interval")]
CIAAW_NatIsotAbunTable[
which(CIAAW_NatIsotAbunTable$Element == tolower(SelectedElem())),
c("Interval")][1]
CIAAW_NatIsotAbunTable[
which(CIAAW_NatIsotAbunTable$Element == tolower(SelectedElem())),
c("Interval")][1]
CIAAW_NatIsotAbunTable[
which(CIAAW_NatIsotAbunTable$Element == tolower(SelectedElem())),
c("Isotope", "Relative.abundance", "Notes", "Interval")]
CIAAW_NatIsotAbunFtnts
CIAAW_NatIsotAbunFtnts$Note
Notes <- isotopes()$Notes[1]
Notes
isotopes()
split('g, g')
split('g, g', '')
split('g, g', ' ')
str_split('g, g', ' ')
library(stringr)
str_split('g, g', ' ')
split('g g', ' ')
strsplit('g g', ' ')
strsplit('g g', ' ')[[1]]
CIAAW_NatIsotAbunFtnts
CIAAW_NatIsotAbunFtnts[strsplit('g g', ' ')[[1]]]
CIAAW_NatIsotAbunFtnts[, strsplit('g g', ' ')[[1]]]
strsplit('g g', ' ')[[1]]
strsplit('g g', ' ')[[1]] -> x
CIAAW_NatIsotAbunFtnts[, x]
CIAAW_NatIsotAbunFtnts[CIAAW_NatIsotAbunFtnts$Note == x, ]
CIAAW_NatIsotAbunFtnts[CIAAW_NatIsotAbunFtnts$Note == 'as', ]
CIAAW_NatIsotAbunFtnts[CIAAW_NatIsotAbunFtnts$Note == x, 2]
isotopes()$Notes
isotopes()$Notes[1]
Notes <- CIAAW_NatIsotAbunFtnts[CIAAW_NatIsotAbunFtnts$Note == strsplit(isotopes()$Notes[1], ' ')[[1]], 2]
Notes
runApp()
runApp('~/CRMsIsotopicCompositionDB')
setwd("~/CRMsIsotopicCompositionDB")
INITI_IsoComCRM_Info <- read.csv(file ='www/IsotopicData/RAW_0_IsoComCRM_Info.csv')
INITI_IsoComCRM_DataIR <- read.csv(file ='www/IsotopicData/RAW_0_IsoComCRM_DataIR.csv')
INITI_IsoComCRM_DataAbundances <- read.csv(file ='www/IsotopicData/RAW_0_IsoComCRM_DataAbundances.csv')
INITI_IsoComCRM_Info
shiny::runApp()
niceSeparator()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
55 % 2
55 %% 2
shiny::runApp()
runApp()
runApp()
input$AcLnk_IsoComCRM %% 2
input$AcLnk_IsoComCRM %% 2 == 0
input$AcLnk_IsoComCRM %% 2 == 1
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
