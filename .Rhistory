countrycode('Colombia','country.name', 'iso2c')
countrycode('TÃ¼rkiye','country.name', 'iso2c')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shiny)
ui <- fluidPage(
actionButton("show", "Show Modal")
)
server <- shinyServer(function(input, output, session) {
observeEvent(input$show, {
showModal(
modalDialog(
"some messsage", title = "modal", footer = actionButton("confirm", "Close")
)
)
})
observeEvent(input$confirm, {
showModal(
modalDialog(
"are you sure?",
footer = tagList(
actionButton("yes", "Yes"),
modalButton("No")
)
)
)
})
observeEvent(input$yes, {
removeModal()
# do something after user confirmation
})
})
shinyApp(ui, server)
runApp()
field
is.null.empty()
fieldsCrmProd[1]
runApp()
runApp()
closeModal
runApp()
Reqfield
ReqField
runApp()
input$fieldsCrmProd[1]
fieldsCrmProd[1]
input$Producer
input$Producer
are.null.empty(c(input$Producer))
c(input$Producer)
fieldsCrmProd
are.null.empty(c(input$Producer, input$ProducerFullName, input$Country, input$URL))
runApp()
runApp()
output$BadNewProducer
renderUI(tags$div(tags$b(input$Producer), ', ',
tags$a(input$ProducerFullName, href = input$URL, target = '_blank'))
)
tags$div(tags$b(input$Producer), ', ',
tags$a(input$ProducerFullName, href = input$URL, target = '_blank'))
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
input$cancelNewProducer
updateSelectInput(session, inputId = session$ns('SelectProducer'), selected = '')
I
runApp()
runApp()
I('function() { this.setValue(""); }')
runApp()
runApp()
input$CRM_type
input$SelectedProducer
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
input$SelectedProducer
runApp()
runApp()
shiny::runApp()
CRMproducers
CRMproducers
CRMsInfoTable$CRM.name
CRMsInfoTable
CRMsInfoTable
SelectedElem()
INITI_IsoCompCRM_Info[grep(tolower(SelectedElem()), INITI_IsoCompCRM_Info$Elements, value = FALSE), ]
CRMsInfoTable
INITI_IsoCompCRM_Info[grep(tolower(SelectedElem()), INITI_IsoCompCRM_Info$Elements, value = FALSE), ]
INITI_IsoCompCRM_DataIR[INITI_IsoCompCRM_DataIR$Element == tolower(SelectedElem()), ]
SelectedElem()
INITI_IsoCompCRM_Info[grep(tolower(SelectedElem()), INITI_IsoCompCRM_Info$Elements, value = FALSE), ]
CRMsInfoTable
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
UploadProduStudyUI('Producer', key = 'Producer')
runApp()
runApp()
output$brwz
restartProdList
runApp()
input$SelectedProducer
NewProdInfo()
runApp()
Producer
Producer()
runApp()
shiny::runApp()
INITI_MeasRepoAuth <- read.csv(file ='www/IsotopicData/RAW_0_MeasurementReportsAuthors.csv')
INITI_MeasRepoAuth
runApp()
MRCsICDB <- RMySQL::dbConnect( ## Hosted freely by https://www.freesqldatabase.com/account/ (5Mb limit)
RMySQL::MySQL(), user = 'sql9599488', password = 'PHsEvvEBuY',
dbname = 'sql9599488', host = 'sql9.freesqldatabase.com'
)
# Following line will delete all tables
####for (i in dbListTables(MRCsICDB)) RMySQL::dbSendQuery(MRCsICDB, paste0("DROP TABLE ", i))
summary(MRCsICDB)
dbListTables(MRCsICDB)
for (i in dbListTables(MRCsICDB)) RMySQL::dbSendQuery(MRCsICDB, paste0("DROP TABLE ", i))
dbListTables(MRCsICDB)
source('www/IsotopicData/01_CIAAW_WebPageRvesting.R')
source('www/IsotopicData/02_INITIAL_DataTableConstruction.R')
dbWriteTable(conn = MRCsICDB, name = 'CIAAW_NatIsotAbunTable', value = CIAAW_NatIsotAbunTable)
dbWriteTable(conn = MRCsICDB, name = 'CIAAW_NatIsotAbunFtnts', value = CIAAW_NatIsotAbunFtnts)
dbWriteTable(conn = MRCsICDB, name = 'CIAAW_IsotopesMass2016', value = CIAAWconsensus::ciaaw.mass.2016)
dbWriteTable(conn = MRCsICDB, name = 'CRMproducers', value = INITI_CRMproducers)
dbWriteTable(conn = MRCsICDB, name = 'MeasuReports', value = INITI_MeasuReports)
dbWriteTable(conn = MRCsICDB, name = 'MeasRepoAuth', value = INITI_MeasRepoAuth)
dbWriteTable(conn = MRCsICDB, name = 'IsoCompCRM_Info', value = INITI_IsoCompCRM_Info)
dbWriteTable(conn = MRCsICDB, name = 'IsoCompCRM_DataIR', value = INITI_IsoCompCRM_DataIR)
dbWriteTable(conn = MRCsICDB, name = 'IsoCompCRM_DataAbundances', value = INITI_IsoCompCRM_DataAb)
dbWriteTable(conn = MRCsICDB, name = 'CalibraCRM_Info', value = INITI_CalibraCRM_Info)
dbWriteTable(conn = MRCsICDB, name = 'CalibraCRM_DataIR', value = INITI_CalibraCRM_DataIR)
dbWriteTable(conn = MRCsICDB, name = 'MatrixCRM_Info', value = INITI_MatrixCRM_Info)
dbWriteTable(conn = MRCsICDB, name = 'MatrixCRM_DataIR', value = INITI_MatrixCRM_DataIR)
dbListTables(MRCsICDB)
MRCsICDB <- RMySQL::dbConnect( ## Hosted freely by https://www.freesqldatabase.com/account/ (5Mb limit)
RMySQL::MySQL(), user = 'sql9599488', password = 'PHsEvvEBuY',
dbname = 'sql9599488', host = 'sql9.freesqldatabase.com'
)
MRCsICDB
# source('www/IsotopicData/01_CIAAW_WebPageRvesting.R')
# source('www/IsotopicData/02_INITIAL_DataTableConstruction.R')
GenericPeriodicTable <- read.csv(file = 'www/IsotopicData/RAW_GenericPeriodicTable.csv')
MRCsICDB <- RMySQL::dbConnect( ## Hosted freely by https://www.freesqldatabase.com/account/ (5Mb limit)
RMySQL::MySQL(), user = 'sql9599488', password = 'PHsEvvEBuY',
dbname = 'sql9599488', host = 'sql9.freesqldatabase.com')
runApp()
runApp()
runApp()
SelectedElem()
INITI_IsoCompCRM_Info[grep(tolower(SelectedElem()), INITI_IsoCompCRM_Info$Elements, value = FALSE), ]
SelectedElem
SelectedElem()
SelectedElem()
CRMsInfoTable
IsoCompCRM_DataIR
SelectedElem()
INITI_IsoCompCRM_Info[grep(tolower(SelectedElem()), INITI_IsoCompCRM_Info$Elements, value = FALSE), ]
INITI_IsoCompCRM_Info[grep(tolower(SelectedElem()), INITI_IsoCompCRM_Info$Elements, value = FALSE), ]
IsoCompCRM_Info
CRMsInfoTable
runApp()
runApp()
runApp()
MySQL()
source("~/CRMsIsotopicCompositionDB/Modules/00_MySQL_Functions.R")
shiny::runApp()
MySQL()
loadData <- function(tableName) {
# Connect to the database
MRCsICDB <- dbConnect(drv = MySQL(), user = options()$mysql$user, password = options()$mysql$password,
dbname = options()$mysql$user, host = options()$mysql$host)
# Construct the fetching query
query <- sprintf("SELECT * FROM %s", tableName)
# Submit the fetch query and disconnect
data <- dbGetQuery(MRCsICDB, query)
dbDisconnect(MRCsICDB)
return(data)
}
MRCsICDB <- RMySQL::dbConnect( ## Hosted freely by https://www.freesqldatabase.com/account/ (5Mb limit)
RMySQL::MySQL(), user = 'sql9599488', password = 'PHsEvvEBuY',
dbname = 'sql9599488', host = 'sql9.freesqldatabase.com'
)
# Following line will delete all tables
####for (i in dbListTables(MRCsICDB)) RMySQL::dbSendQuery(MRCsICDB, paste0("DROP TABLE ", i))
summary(MRCsICDB)
dbListTables(MRCsICDB)
dbDisconnect(MRCsICDB)
dbDisconnect(MRCsICDB)
loadData('CRMproducers')
loadData('CRMproducers')
loadData <- function(tableName) {
# Connect to the database
MRCsICDB <- dbConnect(drv = MySQL(), user = options()$mysql$user, password = options()$mysql$password,
dbname = options()$mysql$user, host = options()$mysql$host)
# Construct the fetching query
query <- sprintf("SELECT * FROM %s", tableName)
# Submit the fetch query and disconnect
data <- dbGetQuery(MRCsICDB, query)
dbDisconnect(MRCsICDB)
return(data)
}
loadData('CRMproducers')
ShowAvailCRMsServer(
id = 'MatrixCRM', id2 = id, devMode = devMode, SelectedElem = SelectedElem,
gnrlClss = 'List_MatrixCRM', key = 'Reported', Actionate = reactive(input$AcLnk_MatrixCRM),
CRMproducers = loadFromDataBase('CRMproducers'),
MeasuReports = loadFromDataBase('MeasuReports'),           MeasRepoAuth = loadFromDataBase('MeasRepoAuth'),
CRMsInfoTable = TrimTableElement(loadFromDataBase('MatrixCRM_Info'), SelectedElem()),
CRMsDataTable = TrimTableElement(loadFromDataBase('MatrixCRM_DataIR'), SelectedElem()))
ShowAvailCRMsServer(
id = 'MatrixCRM', id2 = id, devMode = devMode, SelectedElem = SelectedElem,
gnrlClss = 'List_MatrixCRM', key = 'Reported', Actionate = reactive(input$AcLnk_MatrixCRM),
CRMproducers = loadFromDataBase('CRMproducers'),
MeasuReports = loadFromDataBase('MeasuReports'),           MeasRepoAuth = loadFromDataBase('MeasRepoAuth'),
CRMsInfoTable = TrimTableElement(loadFromDataBase('MatrixCRM_Info'), SelectedElem()),
CRMsDataTable = TrimTableElement(loadFromDataBase('MatrixCRM_DataIR'), SelectedElem()))
source("~/CRMsIsotopicCompositionDB/Modules/00_MySQL_Functions.R")
runApp()
runApp()
loadFromDataBase('CalibraCRM_Info')
loadFromDataBase('MatrixCRM_Info')
element = NULL
if (is.null(element))
print(8)
loadFromDataBase <- function(tableName, element = NULL) {
# Connect to the database
MRCsICDB <- dbConnect(drv = MySQL(), user = options()$mysql$user, password = options()$mysql$password,
dbname = options()$mysql$user, host = options()$mysql$host)
# Construct the fetching query
query <- ifelse(missing(element),
sprintf("SELECT * FROM %s", tableName),
sprintf("SELECT * FROM %s", tableName, "WHERE Username LIKE '%$", tolower(element), "%'"))
# Submit the fetch query and disconnect
data <- dbGetQuery(MRCsICDB, query)
dbDisconnect(MRCsICDB)
return(data)
}
loadFromDataBase('MatrixCRM_Info')
loadFromDataBase('IsoCompCRM_Info')
loadFromDataBase('IsoCompCRM_Info', 'uranium')
tableName = 'IsoCompCRM_Info'
element = 'uranium'
sprintf("SELECT * FROM %s", tableName)
sprintf("SELECT * FROM %s", tableName, "WHERE Elements LIKE '%$", tolower(element), "%'")
# Construct the fetching query
query <- ifelse(missing(element),
sprintf("SELECT * FROM %s", tableName),
sprintf(paste0("SELECT * FROM %s", tableName, "WHERE Elements LIKE '%$", tolower(element), "%'")))
sprintf(paste0("SELECT * FROM %s", tableName, "WHERE Elements LIKE '%$", tolower(element), "%'"))
paste0("SELECT * FROM %s", tableName, "WHERE Elements LIKE '%$", tolower(element), "%'")
sprintf("SELECT * FROM %s", tableName)
sprintf("SELECT * FROM %s", tableName)
str(sprintf("SELECT * FROM %s", tableName))
paste0(sprintf("SELECT * FROM %s", tableName),
sprintf("WHERE Elements LIKE '%$ %s %'", tolower(element)))
sprintf("SELECT * FROM %s", tableName)
sprintf("WHERE Elements LIKE '%$ %s %'", tolower(element))
sprintf("WHERE Elements LIKE '%%$ %s %%'", tolower(element))
loadFromDataBase <- function(tableName, element = NULL) {
# Connect to the database
MRCsICDB <- dbConnect(drv = MySQL(), user = options()$mysql$user, password = options()$mysql$password,
dbname = options()$mysql$user, host = options()$mysql$host)
# Construct the fetching query
query <- ifelse(missing(element),
sprintf("SELECT * FROM %s", tableName),
paste0(sprintf("SELECT * FROM %s", tableName),
sprintf("WHERE Elements LIKE '%%$ %s %%'", tolower(element))))
# Submit the fetch query and disconnect
data <- dbGetQuery(MRCsICDB, query)
dbDisconnect(MRCsICDB)
return(data)
}
loadFromDataBase(tableName = 'IsoCompCRM_Info')
loadFromDataBase(tableName = 'IsoCompCRM_Info', element = 'uranium')
loadFromDataBase <- function(tableName, element = NULL) {
# Connect to the database
MRCsICDB <- dbConnect(drv = MySQL(), user = options()$mysql$user, password = options()$mysql$password,
dbname = options()$mysql$user, host = options()$mysql$host)
# Construct the fetching query
if (missing(element)) {
query <- sprintf("SELECT * FROM %s", tableName)
} else {
element <- tolower(element)
query <- paste0(sprintf("SELECT * FROM %s", tableName),
sprintf("WHERE Elements LIKE '%%$ %s %%'", element))
}
# Submit the fetch query and disconnect
data <- dbGetQuery(MRCsICDB, query)
dbDisconnect(MRCsICDB)
return(data)
}
loadFromDataBase(tableName = 'IsoCompCRM_Info')
loadFromDataBase(tableName = 'IsoCompCRM_Info', element = 'uranium')
loadFromDataBase <- function(tableName, element = NULL) {
# Connect to the database
MRCsICDB <- dbConnect(drv = MySQL(), user = options()$mysql$user, password = options()$mysql$password,
dbname = options()$mysql$user, host = options()$mysql$host)
# Construct the fetching query
if (missing(element)) {
query <- sprintf("SELECT * FROM %s", tableName)
} else {
element <- tolower(element)
query <- paste0(sprintf("SELECT * FROM %s", tableName),
sprintf("WHERE Elements LIKE '%$ %s %'", element))
}
# Submit the fetch query and disconnect
data <- dbGetQuery(MRCsICDB, query)
dbDisconnect(MRCsICDB)
return(data)
}
loadFromDataBase(tableName = 'IsoCompCRM_Info', element = 'uranium')
library(sqldf); fn$sqldf("select * from country_rows where date like '$year' ")
install.packages('sqldf')
library(sqldf); fn$sqldf("select * from country_rows where date like '$year' ")
loadFromDataBase <- function(tableName, element = NULL) {
# Connect to the database
MRCsICDB <- dbConnect(drv = MySQL(), user = options()$mysql$user, password = options()$mysql$password,
dbname = options()$mysql$user, host = options()$mysql$host)
# Construct the fetching query
if (missing(element)) {
query <- sprintf("SELECT * FROM %s", tableName)
} else {
element <- tolower(element)
query <- sprintf("SELECT * FROM %d WHERE Elements LIKE '%s'", tableName, element)
}
# Submit the fetch query and disconnect
data <- dbGetQuery(MRCsICDB, query)
dbDisconnect(MRCsICDB)
return(data)
}
loadFromDataBase(tableName = 'IsoCompCRM_Info')
loadFromDataBase(tableName = 'IsoCompCRM_Info', element = 'uranium')
loadFromDataBase <- function(tableName, element = NULL) {
# Connect to the database
MRCsICDB <- dbConnect(drv = MySQL(), user = options()$mysql$user, password = options()$mysql$password,
dbname = options()$mysql$user, host = options()$mysql$host)
# Construct the fetching query
if (missing(element)) {
query <- sprintf("SELECT * FROM %s", tableName)
} else {
element <- tolower(element)
query <- sprintf("SELECT * FROM %s WHERE Elements LIKE '%s'", tableName, element)
}
# Submit the fetch query and disconnect
data <- dbGetQuery(MRCsICDB, query)
dbDisconnect(MRCsICDB)
return(data)
}
loadFromDataBase(tableName = 'IsoCompCRM_Info')
loadFromDataBase(tableName = 'IsoCompCRM_Info', element = 'uranium')
source("~/CRMsIsotopicCompositionDB/Modules/00_MySQL_Functions.R")
loadFromDataBase <- function(tableName, element = NULL) {
# Connect to the database
MRCsICDB <- dbConnect(drv = MySQL(), user = options()$mysql$user, password = options()$mysql$password,
dbname = options()$mysql$user, host = options()$mysql$host)
# Construct the fetching query
query <- ifelse(missing(element),
sprintf("SELECT * FROM %s", tableName)
sprintf("SELECT * FROM %s WHERE Elements LIKE '%s'", tableName, element))
# Submit the fetch query and disconnect
data <- dbGetQuery(MRCsICDB, query)
dbDisconnect(MRCsICDB)
return(data)
}
# Construct the fetching query
query <- ifelse(missing(element),
sprintf("SELECT * FROM %s", tableName),
sprintf("SELECT * FROM %s WHERE Elements LIKE '%s'", tableName, element))
loadFromDataBase <- function(tableName, element = NULL) {
# Connect to the database
MRCsICDB <- dbConnect(drv = MySQL(), user = options()$mysql$user, password = options()$mysql$password,
dbname = options()$mysql$user, host = options()$mysql$host)
# Construct the fetching query
query <- ifelse(missing(element),
sprintf("SELECT * FROM %s", tableName),
sprintf("SELECT * FROM %s WHERE Elements LIKE '%s'", tableName, element))
# Submit the fetch query and disconnect
data <- dbGetQuery(MRCsICDB, query)
dbDisconnect(MRCsICDB)
return(data)
}
loadFromDataBase(tableName = 'IsoCompCRM_Info')
loadFromDataBase(tableName = 'IsoCompCRM_Info', element = 'uranium')
loadFromDataBase(tableName = 'MatrixCRM_Info')
loadFromDataBase(tableName = 'MatrixCRM_Info', element = 'uranium')
loadFromDataBase(tableName = 'MatrixCRM_Info', element = 'lead')
loadFromDataBase <- function(tableName, element = NULL) {
# Connect to the database
MRCsICDB <- dbConnect(drv = MySQL(), user = options()$mysql$user, password = options()$mysql$password,
dbname = options()$mysql$user, host = options()$mysql$host)
# Construct the fetching query
query <- ifelse(missing(element),
sprintf("SELECT * FROM %s", tableName),
sprintf("SELECT * FROM %s WHERE Elements LIKE '%%$ %s %%'", tableName, element))
# Submit the fetch query and disconnect
data <- dbGetQuery(MRCsICDB, query)
dbDisconnect(MRCsICDB)
return(data)
}
loadFromDataBase(tableName = 'MatrixCRM_Info')
loadFromDataBase(tableName = 'MatrixCRM_Info', element = 'lead')
loadFromDataBase <- function(tableName, element = NULL) {
# Connect to the database
MRCsICDB <- dbConnect(drv = MySQL(), user = options()$mysql$user, password = options()$mysql$password,
dbname = options()$mysql$user, host = options()$mysql$host)
# Construct the fetching query
query <- ifelse(missing(element),
sprintf("SELECT * FROM %s", tableName),
sprintf("SELECT * FROM %s WHERE Elements LIKE '%% %s %%'", tableName, element))
# Submit the fetch query and disconnect
data <- dbGetQuery(MRCsICDB, query)
dbDisconnect(MRCsICDB)
return(data)
}
loadFromDataBase(tableName = 'MatrixCRM_Info')
loadFromDataBase(tableName = 'MatrixCRM_Info', element = 'lead')
tableName
element
sprintf("SELECT * FROM %s WHERE Elements LIKE '%% %s %%'", tableName, element)
loadFromDataBase <- function(tableName, element = NULL) {
# Connect to the database
MRCsICDB <- dbConnect(drv = MySQL(), user = options()$mysql$user, password = options()$mysql$password,
dbname = options()$mysql$user, host = options()$mysql$host)
# Construct the fetching query
query <- ifelse(missing(element),
sprintf("SELECT * FROM %s", tableName),
sprintf("SELECT * FROM %s WHERE Elements LIKE '%%%s%%'", tableName, element))
# Submit the fetch query and disconnect
data <- dbGetQuery(MRCsICDB, query)
dbDisconnect(MRCsICDB)
return(data)
}
sprintf("SELECT * FROM %s WHERE Elements LIKE '%% %s %%'", tableName, element)
loadFromDataBase(tableName = 'MatrixCRM_Info')
sprintf("SELECT * FROM %s WHERE Elements LIKE '%% %s %%'", tableName, element)
loadFromDataBase(tableName = 'MatrixCRM_Info')
loadFromDataBase(tableName = 'MatrixCRM_Info', element = 'lead')
loadFromDataBase(tableName = 'MatrixCRM_Info')
loadFromDataBase(tableName = 'MatrixCRM_Info', element = 'lead')
loadFromDataBase('IsoCompCRM_DataIR')
MRCsICDB <- RMySQL::dbConnect( ## Hosted freely by https://www.freesqldatabase.com/account/ (5Mb limit)
RMySQL::MySQL(), user = 'sql9599488', password = 'PHsEvvEBuY',
dbname = 'sql9599488', host = 'sql9.freesqldatabase.com'
)
# Following line will delete all tables
####for (i in dbListTables(MRCsICDB)) RMySQL::dbSendQuery(MRCsICDB, paste0("DROP TABLE ", i))
summary(MRCsICDB)
dbListTables(MRCsICDB)
source('www/IsotopicData/01_CIAAW_WebPageRvesting.R')
source('www/IsotopicData/02_INITIAL_DataTableConstruction.R')
dbWriteTable(conn = MRCsICDB, name = 'CIAAW_NatIsotAbunTable', value = CIAAW_NatIsotAbunTable)
source("~/CRMsIsotopicCompositionDB/www/Initial_WriteTablesMySQL.R")
MRCsICDB <- RMySQL::dbConnect( ## Hosted freely by https://www.freesqldatabase.com/account/ (5Mb limit)
RMySQL::MySQL(), user = 'sql9599488', password = 'PHsEvvEBuY',
dbname = 'sql9599488', host = 'sql9.freesqldatabase.com'
)
dbListTables(MRCsICDB)
loadFromDataBase(tableName = 'MatrixCRM_Info', element = 'lead')
loadFromDataBase(tableName = 'MatrixCRM_DataIR', element = 'lead')
loadFromDataBase(tableName = 'MatrixCRM_DataIR')
source("~/CRMsIsotopicCompositionDB/Modules/00_MySQL_Functions.R")
source("~/CRMsIsotopicCompositionDB/www/Initial_WriteTablesMySQL.R")
dbListTables(MRCsICDB)
runApp()
source("~/CRMsIsotopicCompositionDB/Modules/00_MySQL_Functions.R")
runApp()
runApp()
RMySQL::MySQL()
rm(list = ls())   # Delete all objects in workspace
gc()              # Garbage collector
source("~/CRMsIsotopicCompositionDB/Modules/00_MySQL_Functions.R")
runApp()
rm(list = ls())   # Delete all objects in workspace
gc()              # Garbage collector
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
